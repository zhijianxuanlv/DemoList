//
//  VerifyView.m
//  VFLDEMO
//
//  Created by Leon on 3/26/15.
//  Copyright (c) 2015 苏州中资联. All rights reserved.
//

#import "VerifyView.h"

@interface VerifyView()<UITextFieldDelegate>

@property BOOL showingPlaceholder;
@property (nonatomic, weak) UITextField *codeField;
@property (nonatomic, weak) UIButton *resendBtn;
@property (nonatomic, weak) UIButton *cancelBtn;
@property (nonatomic, weak) UIButton *submitBtn;
@property (nonatomic, strong) NSTimer *timer;
@property (nonatomic) NSInteger timeout;

@end

@implementation VerifyView


//+ (id)allocWithZone:(struct _NSZone *)zone
//{
//    static VerifyView *instance;
//
//    // dispatch_once是线程安全的，onceToken默认为0
//    static dispatch_once_t onceToken;
//    // dispatch_once宏可以保证块代码中的指令只被执行一次
//    dispatch_once(&onceToken, ^{
//        // 在多线程环境下，永远只会被执行一次，instance只会被实例化一次
//        instance = [super allocWithZone:zone];
//    });
//
//    return instance;
//}
//
//+ (instancetype)sharedInstance
//{
//    return [[self alloc] init];
//}


- (id)initWithFrame:(CGRect)frame{
    if (self = [super initWithFrame:frame]){
        [self setup];
    }
    return self;
}

- (id)initWithCoder:(NSCoder *)aDecoder{
    if (self = [super initWithCoder:aDecoder]){
        [self setup];
    }
    return self;
}


- (void)setup {
    
    self.layer.cornerRadius = 10;
    
    UIButton *cancelBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    cancelBtn.translatesAutoresizingMaskIntoConstraints = NO;
    [cancelBtn setBackgroundColor:[UIColor lightGrayColor]];
    [cancelBtn setTitle:@"取消" forState:UIControlStateNormal];
    [cancelBtn setTitleColor:[UIColor grayColor] forState:UIControlStateNormal];
    cancelBtn.layer.cornerRadius = 5;
    cancelBtn.titleLabel.font = [UIFont systemFontOfSize:14.0];
    [cancelBtn addTarget:self action:@selector(cancelAction:) forControlEvents:UIControlEventTouchUpInside];
    [self addSubview:cancelBtn];
    
    UIButton *submitBtn = [[UIButton alloc] init];
    submitBtn.translatesAutoresizingMaskIntoConstraints = NO;
    [submitBtn setBackgroundColor:[UIColor redColor]];
    [submitBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
    [submitBtn setTitle:@"确定" forState:UIControlStateNormal];
    submitBtn.layer.cornerRadius = 5;
    submitBtn.titleLabel.font = [UIFont systemFontOfSize:14.0];
    [submitBtn addTarget:self action:@selector(submitAction:) forControlEvents:UIControlEventTouchUpInside];
    submitBtn.enabled = NO;
    [self addSubview:submitBtn];
    self.submitBtn = submitBtn;
    
    UILabel *label = [[UILabel alloc] init];
    //    label.backgroundColor = [UIColor yellowColor];
    label.translatesAutoresizingMaskIntoConstraints = NO;
    label.font = [UIFont systemFontOfSize:15];
    label.text = @"请填写短信验证码";
    label.textAlignment = NSTextAlignmentCenter;
    label.textColor = [UIColor lightGrayColor];
    [self addSubview:label];
    
    UIView *view = [[UIView alloc] init];
    //    view.backgroundColor = [UIColor greenColor];
    view.translatesAutoresizingMaskIntoConstraints = NO;
    view.layer.borderColor = [[UIColor grayColor] CGColor];
    view.layer.borderWidth = 0.5;
    [self addSubview:view];
    
    
    UITextField *codeField = [[UITextField alloc] init];
    codeField.translatesAutoresizingMaskIntoConstraints = NO;
    codeField.textAlignment = NSTextAlignmentCenter;
    codeField.keyboardType = UIKeyboardTypeNumberPad;
    codeField.placeholder = @"请输入短信验证码";
    codeField.font = [UIFont systemFontOfSize:10];
    codeField.textColor = [UIColor redColor];
    self.codeField = codeField;
    self.codeField.delegate = self;
    
    
    UIButton *resendBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    resendBtn.translatesAutoresizingMaskIntoConstraints = NO;
    [resendBtn setTitle:@"发送验证码" forState: UIControlStateNormal];
    [resendBtn setTintColor:[UIColor whiteColor]];
    resendBtn.titleLabel.font = [UIFont systemFontOfSize:10];
    [resendBtn setBackgroundColor:[UIColor grayColor]];
    [resendBtn addTarget:self action:@selector(resendAction:) forControlEvents:UIControlEventTouchUpInside];
    
    self.resendBtn = resendBtn;
    
    [view addSubview:codeField];
    [view addSubview:resendBtn];
    
    NSDictionary *subViews = @{@"codeField":codeField,
                               @"resendBtn":resendBtn};
    
    
    
    NSDictionary *views = @{@"cancelBtn":cancelBtn,
                            @"submitBtn":submitBtn,
                            @"label":label,
                            @"view":view};
    
    
    
    NSArray *c1 = [NSLayoutConstraint constraintsWithVisualFormat:@"H:[view(180)]"
                                                          options:0
                                                          metrics:nil
                                                            views:views];
    NSArray *c2 = [NSLayoutConstraint constraintsWithVisualFormat:@"V:[view(30)]"
                                                          options:0
                                                          metrics:nil
                                                            views:views];
    
    
    
    [self addConstraint:[NSLayoutConstraint constraintWithItem:view attribute:NSLayoutAttributeCenterX relatedBy:NSLayoutRelationEqual toItem:self attribute:NSLayoutAttributeCenterX multiplier:1.0 constant:0]];
    [self addConstraint:[NSLayoutConstraint constraintWithItem:view attribute:NSLayoutAttributeCenterY relatedBy:NSLayoutRelationEqual toItem:self attribute:NSLayoutAttributeCenterY multiplier:1.0 constant:-10]];
    [self addConstraint:[NSLayoutConstraint constraintWithItem:label attribute:NSLayoutAttributeCenterX relatedBy:NSLayoutRelationEqual toItem:self attribute:NSLayoutAttributeCenterX multiplier:1.0 constant:0]];
    
    
    NSArray *c3 = [NSLayoutConstraint constraintsWithVisualFormat:@"V:[label]-18-[view]-30-[cancelBtn(==30)]"
                                                          options:NSLayoutFormatAlignAllLeft
                                                          metrics:nil
                                                            views:views];
    NSArray *c4 = [NSLayoutConstraint constraintsWithVisualFormat:@"V:[view]-30-[submitBtn(==30)]"
                                                          options:NSLayoutFormatAlignAllRight
                                                          metrics:nil
                                                            views:views];
    NSArray *c5 = [NSLayoutConstraint constraintsWithVisualFormat:@"H:[cancelBtn(85)]-(>=1)-[submitBtn(==cancelBtn)]"
                                                          options:0
                                                          metrics:nil
                                                            views:views];
    
    NSArray *c6 = [NSLayoutConstraint constraintsWithVisualFormat:@"H:|-0-[codeField(100)]-0-[resendBtn]-0-|"
                                                          options:0
                                                          metrics:nil
                                                            views:subViews];
    NSArray *c7 = [NSLayoutConstraint constraintsWithVisualFormat:@"V:|-0-[codeField]-0-|"
                                                          options:0
                                                          metrics:nil
                                                            views:subViews];
    NSArray *c8 = [NSLayoutConstraint constraintsWithVisualFormat:@"V:|-0-[resendBtn]-0-|"
                                                          options:0
                                                          metrics:nil
                                                            views:subViews];
    
    
    [self addConstraints:c1];
    [self addConstraints:c2];
    [self addConstraints:c3];
    [self addConstraints:c4];
    [self addConstraints:c5];
    
    [view addConstraints:c6];
    [view addConstraints:c7];
    [view addConstraints:c8];
    
    [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(textChange) name:UITextFieldTextDidChangeNotification object:self.codeField];
    
}

- (void)textChange {
    
    if (self.codeField.text.length > 0 ){
//        if (!iOS8) {
//            self.codeField.placeholder = @"";
//        }
        self.codeField.font = [UIFont boldSystemFontOfSize:15];
    } else {
//        if (!iOS8){
//            self.codeField.placeholder = @"请输入短信验证码";
//        }
        self.codeField.font = [UIFont systemFontOfSize:10];
    }
    self.submitBtn.enabled = (self.codeField.text.length == 6);
}


-(void)textFieldDidBeginEditing:(UITextField *)textField{

    if(_showingPlaceholder){
    
        [textField setText:@""];
        _showingPlaceholder = NO;
    }
}

-(BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string{

    if([string isEqualToString:@"\n"]){
    
        [textField resignFirstResponder];
        if(_showingPlaceholder){
        
            return NO;
        }
        return NO;
    }
    return YES;
}
- (void)resendAction :(UIButton *) resendBtn{
    if ([self.delegate respondsToSelector:@selector(verifyView:clickResend:)]) {
        [self.delegate verifyView:self clickResend:resendBtn];
        //        [self startTime];
        [self addTimer];
        
    }
}

- (void)cancelAction :(UIButton *) cancelBtn{
    if ([self.delegate respondsToSelector:@selector(verifyView:clickCancel:)]) {
        [self.delegate verifyView:self clickCancel:cancelBtn];
        [self resetView];
    }
}

- (void)submitAction :(UIButton *) submitBtn{
    if ([self.delegate respondsToSelector:@selector(verifyView:clickSubmitWithCode:)]) {
        [self.delegate verifyView:self clickSubmitWithCode:self.codeField.text];
        [self resetView];
    }
}

- (void)resetView {
    self.codeField.font = [UIFont systemFontOfSize:10];
    self.codeField.text = @"";
}


- (void)addTimer {
    self.timeout = 59;
    self.timer = [NSTimer scheduledTimerWithTimeInterval:1.0f target:self selector:@selector(nextSeconds) userInfo:nil repeats:YES];
    [[NSRunLoop currentRunLoop] addTimer:self.timer forMode:NSRunLoopCommonModes];
}

- (void)nextSeconds {
    if(self.timeout<=0){ //倒计时结束，关闭
        [self removeTimer];
        //设置界面的按钮显示 根据自己需求设置
        [self.resendBtn setTitle:@"发送验证码" forState:UIControlStateNormal];
        self.resendBtn.userInteractionEnabled = YES;
    }else{
        //            int minutes = timeout / 60;
        int seconds = self.timeout % 60;
        NSString *strTime = [NSString stringWithFormat:@"%.2d", seconds];
        //设置界面的按钮显示 根据自己需求设置
        LCLog(@"____%@",strTime);
        [self.resendBtn setTitle:[NSString stringWithFormat:@"%@秒后重新发送",strTime] forState:UIControlStateNormal];
        self.resendBtn.userInteractionEnabled = NO;
        self.timeout--;
    }
}

- (void)removeTimer{
    [self.timer invalidate];
    self.timer = nil;
    
}

- (void)dealloc{
    [[NSNotificationCenter  defaultCenter] removeObserver:self];
    [self removeTimer];
}

@end
